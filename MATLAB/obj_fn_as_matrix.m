%% Amanda Dings
% CS 534 Project
% Creating objective matrix which represents a 2D obstacle course

clc; clear variables; close all;
%% Step 1 Create a "simple" objective fn
% i.e. a function which represents an empty obstacle field

% Create 2D representation of the field we want
% Define start and end nodes
start_loc = [900,900];  % starting point (mm)
%end_loc   = [101,101];  % ending point   (mm)  
end_loc = [80,90];

% Define the domain
x = 1:1001;
y = 1:1001;
[X,Y] = meshgrid(x,y);

% Define the overal slope of the plane
field = (200/450).*X+(200/850).*Y+20;

% Make a "hill" at the start node
x = -101:101;
y = -101:101;
[x_hill, y_hill] = meshgrid(x,y);
hill = -0.01.*x_hill.^2 -0.01.*y_hill.^2;
field(799:1001,799:1001) = field(799:1001,799:1001)+hill+204.020;

% Make a "valley" at the end node
valley = 0.01.*x_hill.^2 + 0.01*y_hill.^2;
field(1:203,1:203) = field(1:203,1:203)+valley-204.020;

% Plot the field we end up with
colormap(jet)
surf(field,'edgealpha',0.1,'facealpha',0.0)
title(sprintf('Start: (900, 900)\nEnd: (101, 101)'))
hold on

% Emphasize the starting and ending points
plot3(start_loc(1),start_loc(2),field(start_loc(1),start_loc(2)),...
    '.r','markersize',45)
plot3(end_loc(1),end_loc(2),field(end_loc(1),end_loc(2)), ...
    '.g','markersize',45)

% Save field to disk
%save('no_obstacles.mat', 'field')  % note: minimum is at (90,80)!
                                    %       maximum is at (912,922)

% Create 2D representation of the field
view(2)
plot3([1000 1000],[0 1000], [0,0],'-k','linewidth',5)
plot3([0 1000],[1000 1000], [0,0],'-k','linewidth',5)
plot3([0 0],[0 1000], [0,0],'-k','linewidth',5)
plot3([0 1000],[0 0], [0,0],'-k','linewidth',5)
%% Step 2 Create an objective fn with obstacles
obs = 500*ones(101);  % a rectangular prism, 101x101x500
field(350:450,150:250) = field(350:450,150:250) + obs; % center: (200,400)
field(550:650,550:650) = field(550:650,550:650) + obs; % center: (600,600)

% Plot the field we end up with
figure
colormap(jet)
s=surf(field,'edgealpha',0.1,'facealpha',0.5)%,'facealpha',0.2)
title(sprintf('Start: (900, 900)\nEnd: (101, 101)'));
hold on

% Emphasize the starting and ending points
plot3(start_loc(1),start_loc(2),field(start_loc(1),start_loc(2)),...
    '.r','markersize',45)
plot3(end_loc(1),end_loc(2),field(end_loc(1),end_loc(2)), ...
    '.g','markersize',45)

% save field to disk
%save('some_obstacles.mat','field')
r = rectangle('position',[150,350,100,100]);
r.FaceColor='k'
r = rectangle('position',[550,550,100,100])
r.FaceColor='k'
view(2)
plot3([1000 1000],[0 1000], [0,0],'-k','linewidth',5)
plot3([0 1000],[1000 1000], [0,0],'-k','linewidth',5)
plot3([0 0],[0 1000], [0,0],'-k','linewidth',5)
plot3([0 1000],[0 0], [0,0],'-k','linewidth',5)


%% Make plots of results
% using kirsten's data but eventually it will be averaged among us all
% sma_some_obstacles_x = [900 ...        
% 870 ...        
% 840 ...        
% 810 ...        
% 780 ...        
% 750 ...        
% 720 ...        
% 690 ...        
% 660 ...        
% 630 ...        
% 600.03481727 ...
% 570.03481727 ...
% 564.22174549 ...
% 547.62415323 ...
% 547.6129997  ...
% 547.62766052 ...
% 547.61933952 ...
% 517.61933952 ...
% 547.61933952 ...
% 517.61933952 ...
% 547.61933952 ...
% 549.41829513 ...
% 519.41829513 ...
% 489.41829513 ...
% 459.41829513 ...
% 429.41829513 ...
% 399.41829513 ...
% 369.41829513 ...
% 339.41829513 ...
% 309.41829513 ...
% 279.41829513 ...
% 249.41829513 ...
% 219.41829513 ...
% 189.41829513 ...
% 159.41829513 ...
% 129.41829513 ...
%  99.41829513 ...
%  78.77167991 ...
%  78.74099372 ...
%  78.78083856 ...
%  78.71598618];
% sma_some_obstacles_y =  [900 ...        
% 870 ...        
% 840 ...        
% 810 ...        
% 780 ...        
% 750 ...        
% 720 ...        
% 690 ...        
% 660 ...        
% 650.3699478 ...
% 650.38623153 ...
% 650.37498955 ...
% 650.37358801 ...
% 620.37358801 ...
% 590.37358801 ...
% 560.84506948 ...
% 556.41871221 ...
% 526.41871221 ...
% 549.38165171 ...
% 519.38165171 ...
% 549.38165171 ...
% 547.60419331 ...
% 517.60419331 ...
% 487.60419331 ...
% 457.60419331 ...
% 427.60419331 ...
% 397.60419331 ...
% 367.60419331 ...
% 337.60419331 ...
% 307.60419331 ...
% 277.60419331 ...
% 247.60419331 ...
% 217.60419331 ...
% 187.60419331 ...
% 157.60419331 ...
% 127.60419331 ...
%  97.60419331 ...
%  89.19893583 ...
%  89.15413635 ...
%  89.11685322 ...
%  89.27637184];
% sma_some_obstacles_z = interp2(field,sma_some_obstacles_x, sma_some_obstacles_y); % 2d table lookup
% plot3(sma_some_obstacles_x, sma_some_obstacles_y, sma_some_obstacles_z, '.-b',...
%     'LineWidth',5,'MarkerSize',5)

gwo_some_obs_x = [900 ...
850 ... 850. ]
800 ... 800. ]
750 ... 750. ]
700 ... 700. ]
650 ... 650. ]
650.35535805 ...
650.39509171 ...
600.39509171 ...
551.1247741  ...
577.12423032 ...
527.12423032 ...
477.12423032 ...
427.12423032 ...
377.12423032 ...
327.12423032 ...
277.12423032 ...
227.12423032 ...
177.12423032 ...
127.12423032 ...
 78.8419188  ...
 78.56867151 ...
 78.78970391 ...
 78.57595255 ...
 78.89019555 ...
 78.78551631];

gwo_some_obs_y = [900 ...
850 ...
800 ...
750 ...
700 ...
650 ...
600 ...
578.76789605 ...
547.62351634 ...
547.62244005 ...
547.60183298 ...
497.60183298 ...
447.60183298 ...
397.60183298 ...
347.60183298 ...
297.60183298 ...
247.60183298 ...
197.60183298 ...
147.60183298 ...
97.60183298 ...
89.22918143 ...
89.57365659 ...
 89.28481309 ...
 89.16656317 ...
 89.22968895 ...
 89.28016602];

gwo_some_obs_z = interp2(field,gwo_some_obs_x, gwo_some_obs_y); % 2d table lookup
plot3(gwo_some_obs_x, gwo_some_obs_y, gwo_some_obs_z, '.-b',...
     'LineWidth',5,'MarkerSize',5)


%view(3)
%s.FaceAlpha=0.5;
%s.EdgeAlpha=0.1;






%% Data & shit
% some_obstacles results (SMA)
% Global Best Solution:
% [78.85679782 89.22777493]
% <class 'numpy.ndarray'>
% [[900.         900.        ]
%  [800.         800.        ]
%  [700.         700.        ]
%  [600.         650.37134488]
%  [500.         550.37134488]
%  [400.         450.37134488]
%  [300.         350.37134488]
%  [200.         250.37134488]
%  [100.         150.37134488]
%  [ 78.97384695  88.95362632]
%  [ 78.73103306  89.04949513]]
% Total Distance: [1592.24828161]
% Original SMA Best Fit: [-121.00895831]
% SMA Time Elapsed:  70.45086739499999

% some_obstacles results (GWO)
% Global Best Solution:
% [78.62909453 89.57857042]
% <class 'numpy.ndarray'>
% [[900.         900.        ]
%  [800.         800.        ]
%  [700.         700.        ]
%  [600.         650.38897339]
%  [547.71572648 550.38897339]
%  [447.71572648 450.38897339]
%  [347.71572648 350.38897339]
%  [247.71572648 250.38897339]
%  [147.71572648 150.38897339]
%  [ 78.28813535  89.28152018]
%  [ 78.45630624  88.98213325]]
% Total Distance: [1586.04911356]
% GWO Best Fit: [-121.00762186]
% GWO Time Elapsed:  88.75591872999985